##$Id: sql.map.pool.java.vm,v 1.1 2007/10/19 09:44:20 kameleono Exp $
#parse( "schema.include.vm" )
$codewriter.setCurrentJavaFilename($pkg, "SQLMapPool.java")
#set ( $dbdesc = "${db.getUrl()} ${db.getEngine()} ${db.getCatalog()} ${db.getSchema()}" )
/**
* SQLMapPool.java
*
* WARNING: This is an autogenerated file - (JSQL2iBatis - http://sourceforge.net/projects/jsql2ibatis/)
*
* @author 
* @version 
* @since  
*/
package $pkg;

import java.io.Reader;
import java.util.Hashtable;

import com.ibatis.common.resources.Resources;
import com.ibatis.sqlmap.client.SqlMapClient;
import com.ibatis.sqlmap.client.SqlMapClientBuilder;

public class SQLMapPool 
{

	static Hashtable sqlmaps=null;
	static SQLMapPool instance=null;
	
	/**
	 * Bloque estatico para añadir en el Hashtable los sqlmap de las diferentes
	 * bases de datos
	 */
	static
	{
		try
		{
			createSqlMaps();
		}
		catch(Exception e)
		{
			// Ha ocurrido un error, se aborta la ejecucion
			System.err.println("Ha ocurrido un error: "+e.toString()+".Abortando ejecucion.");
			System.exit(-1);
		}
	}
	//-----
	
	/**
	 * Añade al HashMap los sqlmap definidos, como un pool, pues podriamos usar mas de una base de datos.
	 * @throws Exception Exception levantada en caso de error.
	 */
	public static void createSqlMaps() throws Exception
	{
		try
		{
			SQLMapPool.sqlmaps = new Hashtable();
									
			// Datos para la 1ª BASE DE DATOS
			SqlMapClient sqlMap;
			String resource = "config/SqlMapConfig.xml";
			Reader reader = Resources.getResourceAsReader(resource);
			sqlMap = SqlMapClientBuilder.buildSqlMapClient(reader);
			
			// Añadirla al Pool
			SQLMapPool.sqlmaps.put("${dbdesc}", sqlMap);
						
			/*
			// 2 BASE DE DATOS Y SUCESIVAS. 
			// Descomenta y cambialo como corresponda si usas mas de 1 base de datos.
			SqlMapClient sqlMap2;
			String resource2 = "config/SqlMapConfig2.xml";
			Reader reader2 = Resources.getResourceAsReader(resource2);
			sqlMap2 = SqlMapClientBuilder.buildSqlMapClient(reader2);
			SQLMapPool.sqlmaps.put("MI_BASE_DATOS_2", sqlMap2);
			...
			*/
			
		}
		catch(Exception e)
		{
			e.printStackTrace();
			throw e;
		}
	}
	//----

	/**
	 * Devuelve la referencia al Sqlmap correspondiente a partir del alias de bdatos especificado.
	 * @param alias alias de la base de datos.
	 * @return SqlMap correspondiente a la base de datos.
	 * @throws Exception Excepcion levantada en caso de error.
	 */
	public static SqlMapClient getSQLMap(String alias) throws Exception
	{
		return (SqlMapClient) SQLMapPool.sqlmaps.get(alias);
	}
	//----
	
	
	/**
	 * Para probar el correcto funcionamiento de la clase.
	 * @param args argumentos de entrada.
	 */
	public static void main(String[] args) 
	{
		try
		{
			SqlMapClient mibd = SQLMapPool.getSQLMap("${dbdesc}");
			System.out.println("@SqlMapClient Bdatos:"+mibd);
						
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}
	//----
		
}
//end of SQLMapPool.java
