// ______________________________________________________
// Generated by sql2java - https://github.com/10km/sql2java-2-6-7 (custom branch) 
// modified by guyadong from
// sql2java original version https://sourceforge.net/projects/sql2java/ 
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
// ______________________________________________________

package net.gdface.facelog.db;

/**
 * Interface to handle database calls (save, load, count, etc...) for the fl_log table.<br>
 * @author guyadong
 */
public interface ILogManager extends TableManager<LogBean>
{  
    //////////////////////////////////////
    // PRIMARY KEY METHODS
    //////////////////////////////////////

    /**
     * Loads a {@link LogBean} from the fl_log using primary key fields.
     *
     * @param id Integer - PK# 1
     * @return a unique LogBean or {@code null} if not found
     */
    //1
    public LogBean loadByPrimaryKey(Integer id);

    
    /**
     * Returns true if this fl_log contains row with primary key fields.
     * @param id Integer - PK# 1
     * @see #loadByPrimaryKey($keys)
     */
    //1.4
    public boolean existsPrimaryKey(Integer id);
    
    /**
     * Delete row according to its primary keys.<br>
     * all keys must not be null
     *
     * @param id Integer - PK# 1
     * @return the number of deleted rows
     */
    //2
    public int deleteByPrimaryKey(Integer id);

 
    /**
     * Save the LogBean bean and referenced beans and imported beans into the database.
     *
     * @param bean the {@link LogBean} bean to be saved
     * @param refFlDevicebyDeviceId the {@link DeviceBean} bean referenced by {@link LogBean} 
     * @param refFlFeaturebyVerifyFeature the {@link FeatureBean} bean referenced by {@link LogBean} 
     * @param refFlFeaturebyCompareFeature the {@link FeatureBean} bean referenced by {@link LogBean} 
     * @param refFlPersonbyPersonId the {@link PersonBean} bean referenced by {@link LogBean} 
         * @return the inserted or updated {@link LogBean} bean
     */
    //3.5 SYNC SAVE 
    public LogBean save(LogBean bean
        , DeviceBean refFlDevicebyDeviceId , FeatureBean refFlFeaturebyVerifyFeature , FeatureBean refFlFeaturebyCompareFeature , PersonBean refFlPersonbyPersonId 
        );
    /**
     * Transaction version for sync save
     * @see {@link #save(LogBean , DeviceBean , FeatureBean , FeatureBean , PersonBean )}
     */
    //3.6 SYNC SAVE AS TRANSACTION
    public LogBean saveAsTransaction(final LogBean bean
        ,final DeviceBean refFlDevicebyDeviceId ,final FeatureBean refFlFeaturebyVerifyFeature ,final FeatureBean refFlFeaturebyCompareFeature ,final PersonBean refFlPersonbyPersonId 
        );
      //////////////////////////////////////
    // GET/SET FOREIGN KEY BEAN METHOD
    //////////////////////////////////////
    /**
     * Retrieves the {@link DeviceBean} object referenced by {@link LogBean#getDeviceId}() field.<br>
     * FK_NAME : fl_log_ibfk_2
     * @param bean the {@link LogBean}
     * @return the associated {@link DeviceBean} bean or {@code null} if {@code bean} is {@code null}
     */
    //5.1 GET REFERENCED VALUE
    public DeviceBean getReferencedByDeviceId(LogBean bean);

    /**
     * Associates the {@link LogBean} object to the {@link DeviceBean} object by {@link LogBean#getDeviceId}() field.
     *
     * @param bean the {@link LogBean} object to use
     * @param beanToSet the {@link DeviceBean} object to associate to the {@link LogBean}
     * @return always beanToSet saved
     * @throws Exception
     */
    //5.2 SET REFERENCED 
    public DeviceBean setReferencedByDeviceId(LogBean bean, DeviceBean beanToSet);
    /**
     * Retrieves the {@link FeatureBean} object referenced by {@link LogBean#getVerifyFeature}() field.<br>
     * FK_NAME : fl_log_ibfk_3
     * @param bean the {@link LogBean}
     * @return the associated {@link FeatureBean} bean or {@code null} if {@code bean} is {@code null}
     */
    //5.1 GET REFERENCED VALUE
    public FeatureBean getReferencedByVerifyFeature(LogBean bean);

    /**
     * Associates the {@link LogBean} object to the {@link FeatureBean} object by {@link LogBean#getVerifyFeature}() field.
     *
     * @param bean the {@link LogBean} object to use
     * @param beanToSet the {@link FeatureBean} object to associate to the {@link LogBean}
     * @return always beanToSet saved
     * @throws Exception
     */
    //5.2 SET REFERENCED 
    public FeatureBean setReferencedByVerifyFeature(LogBean bean, FeatureBean beanToSet);
    /**
     * Retrieves the {@link FeatureBean} object referenced by {@link LogBean#getCompareFeature}() field.<br>
     * FK_NAME : fl_log_ibfk_4
     * @param bean the {@link LogBean}
     * @return the associated {@link FeatureBean} bean or {@code null} if {@code bean} is {@code null}
     */
    //5.1 GET REFERENCED VALUE
    public FeatureBean getReferencedByCompareFeature(LogBean bean);

    /**
     * Associates the {@link LogBean} object to the {@link FeatureBean} object by {@link LogBean#getCompareFeature}() field.
     *
     * @param bean the {@link LogBean} object to use
     * @param beanToSet the {@link FeatureBean} object to associate to the {@link LogBean}
     * @return always beanToSet saved
     * @throws Exception
     */
    //5.2 SET REFERENCED 
    public FeatureBean setReferencedByCompareFeature(LogBean bean, FeatureBean beanToSet);
    /**
     * Retrieves the {@link PersonBean} object referenced by {@link LogBean#getPersonId}() field.<br>
     * FK_NAME : fl_log_ibfk_1
     * @param bean the {@link LogBean}
     * @return the associated {@link PersonBean} bean or {@code null} if {@code bean} is {@code null}
     */
    //5.1 GET REFERENCED VALUE
    public PersonBean getReferencedByPersonId(LogBean bean);

    /**
     * Associates the {@link LogBean} object to the {@link PersonBean} object by {@link LogBean#getPersonId}() field.
     *
     * @param bean the {@link LogBean} object to use
     * @param beanToSet the {@link PersonBean} object to associate to the {@link LogBean}
     * @return always beanToSet saved
     * @throws Exception
     */
    //5.2 SET REFERENCED 
    public PersonBean setReferencedByPersonId(LogBean bean, PersonBean beanToSet);
    //_____________________________________________________________________
    //
    // USING INDICES
    //_____________________________________________________________________

     /**
     * Retrieves an array of LogBean using the compare_feature index.
     *
     * @param compareFeature the compare_feature column's value filter.
     * @return an array of LogBean
     */
    public LogBean[] loadByIndexCompareFeature(String compareFeature);
    
    /**
     * Retrieves a list of LogBean using the compare_feature index.
     *
     * @param compareFeature the compare_feature column's value filter.
     * @return a list of LogBean
     */
    public java.util.List<LogBean> loadByIndexCompareFeatureAsList(String compareFeature);

    /**
     * Deletes rows using the compare_feature index.
     *
     * @param compareFeature the compare_feature column's value filter.
     * @return the number of deleted objects
     */
    public int deleteByIndexCompareFeature(String compareFeature);
    
     /**
     * Retrieves an array of LogBean using the device_id index.
     *
     * @param deviceId the device_id column's value filter.
     * @return an array of LogBean
     */
    public LogBean[] loadByIndexDeviceId(Integer deviceId);
    
    /**
     * Retrieves a list of LogBean using the device_id index.
     *
     * @param deviceId the device_id column's value filter.
     * @return a list of LogBean
     */
    public java.util.List<LogBean> loadByIndexDeviceIdAsList(Integer deviceId);

    /**
     * Deletes rows using the device_id index.
     *
     * @param deviceId the device_id column's value filter.
     * @return the number of deleted objects
     */
    public int deleteByIndexDeviceId(Integer deviceId);
    
     /**
     * Retrieves an array of LogBean using the person_id index.
     *
     * @param personId the person_id column's value filter.
     * @return an array of LogBean
     */
    public LogBean[] loadByIndexPersonId(Integer personId);
    
    /**
     * Retrieves a list of LogBean using the person_id index.
     *
     * @param personId the person_id column's value filter.
     * @return a list of LogBean
     */
    public java.util.List<LogBean> loadByIndexPersonIdAsList(Integer personId);

    /**
     * Deletes rows using the person_id index.
     *
     * @param personId the person_id column's value filter.
     * @return the number of deleted objects
     */
    public int deleteByIndexPersonId(Integer personId);
    
     /**
     * Retrieves an array of LogBean using the verify_feature index.
     *
     * @param verifyFeature the verify_feature column's value filter.
     * @return an array of LogBean
     */
    public LogBean[] loadByIndexVerifyFeature(String verifyFeature);
    
    /**
     * Retrieves a list of LogBean using the verify_feature index.
     *
     * @param verifyFeature the verify_feature column's value filter.
     * @return a list of LogBean
     */
    public java.util.List<LogBean> loadByIndexVerifyFeatureAsList(String verifyFeature);

    /**
     * Deletes rows using the verify_feature index.
     *
     * @param verifyFeature the verify_feature column's value filter.
     * @return the number of deleted objects
     */
    public int deleteByIndexVerifyFeature(String verifyFeature);
    
}
